
- Deployment is used to manage and maintain the pods.
- also, we can keep the pods in running on a perticuller time.
- use for stateless application like frontend and backend.

- 2 types of policies are available.
  
  1) Rolling update
  2) Rolling back.


  1) Rolling update:

      - In this policy the pods are automatically updates when we make some changes in the manifest file.

  2) Rolling Back:
      - 


    There are also some strategies are available:

    - Rolling update strategy ----> Recreate the pods and then destroy the old once.
    - Recreate stategy --->          Recreate all at once and destroy at once.
    - Canary deployment.
    - Blue-green deployment.


    

    ** StatefulSet-
      - In StatefulSet the previous state matters.
      - It is use for Stateful application like DB.
      - All pods are start from SS, have unique identity which start from 0.

    
    ======================================================================================


    ** ConfigMap & Secret files and how to map it into StatefulSet file to connect ot Database:**

    * * ConfigMap * *
      
    - It is use to store the non confidential configuration data in a Key-Value pair.

    -  How to write a CongiMap file

        apiVersion: v1
        kind: ConfigMap
        metadata: 
          name: my-config

        data:
          database: mydb



    * * Secret * *

    - It is use to store the  confidential configuration data in a Key-Value pair.

    - How to wite a Secret file

    - First we need to encrypt our passowrd:
        
        - echo -n <you-password> | base64

    - then, enter that encrypt passoword inside the secert file.

      apiVersion: v1
        kind: Secret
        metadata: 
          name: my-secret

        data:
          password: <Encrypt-password>

-------------------------------------------------------------------------------------------------
  * * Now we have to map this in the StatefulSet file, to connect to database.* *


apiVersion:  apps/v1
kind: StatefulSet
metadata:
  name: my-ss

spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp

  template:
    metadata:
      labels:
        app: myapp


    spec:
      containers:
      - name: cont1
        image:  mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-secret
              key:  password

        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: my-config
              key:  database
      
    ======================================================================================



    